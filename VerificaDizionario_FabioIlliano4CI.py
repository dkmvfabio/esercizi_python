# -*- coding: utf-8 -*-
"""03_collections_exercise_campionati3_ns.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P4dYlNPf-1K8Kjf8X0LXMg7H2prr1mG7

---

### Esercizio: Gestione dei Concorsi di Cucina

Realizza un programma in Python per gestire i risultati di un concorso di cucina. La struttura dati sarà un **dizionario** in cui ogni chiave rappresenta il nominativo dello chef (nel formato `"Cognome Nome"`) e il valore associato è una **lista di tuple**.

#### **Struttura dei dati:**

Per ogni chef la lista inizialmente conterrà 4 tuple, una per ciascuna categoria di piatto:
- **Antipasti**
- **Primi**
- **Secondi**
- **Dessert**

Ogni tupla dovrà avere la seguente struttura:
- **Posizione 1:** Nome della categoria di piatto (ad es. `"antipasti"`)
- **Posizione 2:** Una tupla con i punteggi assegnati, rappresentanti: (creatività, gusto, presentazione).  
  *(I punteggi sono numeri interi compresi tra 1 e 10.)*
- **Posizione 3:** La categoria dello chef (ad esempio, `"Junior Chef"` o `"Senior Chef"`).


#### **Istruzioni:**

1. **Popolamento statico iniziale:**  
   Crea staticamente il dizionario con i dati sopra indicati.

2. **Aggiunta statica di un nuovo chef:**  
   Aggiungi al dizionario il tuo nominativo con i punteggi nelle varie categorie  a tua scelta, facendo attenzione che **nel punteggio della categoria "primi" il valore relativo al gusto (il secondo elemento della tupla dei punteggi) sia uguale al tuo [numero di registro](https://www.umanet.net/social/discussione/2057/)** %10.

3. **Funzione per l'aggiunta di una nuova categoria di piatto:**  
   Crea una funzione per aggiungere a ogni chef una **quinta categoria** denominata `"piatti unici"` con punteggi (tupla di 3 interi) random (tra 1 e 10) e categoria di chef a tua scelta passata come parametro.

4. **Funzione per la stampa dati di uno chef :**
Crea una funzione che riceva il nome dello chef e mostri i suoi dati, se lo chef non esiste mostri un messaggio di errore. I dati devono essere mostrati preceduti da una stringa di presentazione:
es.
* Categoria di Chef:
* Cognome e Nome : ....
* Punteggi antipasti :
* creatività=...
* gusto=:...
* presentazione=...

....

5. **Funzione per la stampa dati di un piatto:**
Crea una funzione che riceva la categoria di piatto e mostri i relativi dati per tutti gli chef, se non esistono mostra un messaggio di errore. I dati devono essere mostrati preceduti da una stringa di presentazione


6. **Funzione per l'analisi dei punteggi:**  
   * **A.** Realizza una funzione per stampare il **punteggio totale massimo**  in una categoria di piatto e categoria di chef. La funzione dovrà:
   -Ricevere come parametri il dizionario, e le categorie di piatto e di chef. -Validare i dati verificando l'esistenza della categoria di piatto e di chef e se non esistono mostra un messaggio di errore.
   -Restituire il punteggio totale massimo (ottenuto sommando i tre valori della tupla) e i nominativi degli chef che lo hanno conseguito.

   * **B.** Realizzare una funzione per stampare la **media dei punteggi totali** per una categoria di piatto e categoria di chef. La funzione dovrà:
   - Ricevere come parametri il dizionario, e le categorie di piatto e di chef. - Validare i dati verificando l'esistenza della categoria di piatto e di chef e se non esistono mostra un messaggio di errore.
   - Restituire la media dei punteggi totali.

7. **Funzione per l'aggiunta di un nuovo chef:**  
   Realizza una funzione inserisci_nuovo_chef(dizionario,nominativo,risultati) che permetta di aggiungere un nuovo chef al dizionario. La funzione dovrà:
   - Ricevere come parametri il dizionario, una tupla (nome,cognome) dello chef e la lista dei risultati per le 5 categorie (da richiedere in input all'utente utilizzando la funzione: inserisci_dati_nuovo_chef()).
   - Validare che i dati forniti rispettino la struttura richiesta: nominativo= una tupla di lunghezza 2 e risultati = una lista di 5 tuple, ciascuna tupla composta da 3 elementi, con il secondo elemento una tupla di 3 interi).
   - Aggiungere il nuovo chef al dizionario se i dati sono validi, altrimenti stampare un messaggio di errore.
"""
import random
#1
dizionario = { "Mario Rossi":
              [["Antipasti",(8,7,9),"Junior Chef"],["Primi",(7,8,8),"Junior Chef"],["Secondi",(9,9,8),"Junior Chef"],["Dessert",(8,8,9),"Junior Chef"]],
               "Luigi Bianchi":
              [["Antipasti",(7,7,8),"Senior Chef"],["Primi",(8,9,7),"Senior Chef"],["Secondi",(7,8,7),"Senior Chef"],["Dessert",(9,8,8),"Senior Chef"]],
               "Giulia Verdi":
              [["Antipasti",(9,8,8),"Junior Chef"],["Primi",(8,7,9),"Junior Chef"],["Secondi",(8,8,8),"Junior Chef"],["Dessert",(7,9,8),"Junior Chef"]]
}

#2
dizionario["Fabio Illiano"] = [["Antipasti",(7,7,9),"Junior Chef"],["Primi",(5,2,7),"Junior Chef"],["Secondi",(9,7,8),"Junior Chef"],["Dessert",(7,9,8),"Junior Chef"]]

#3
def aggiuntaCategoria(dizionario):
    for nomeChef, dati in dizionario.items():
        nCreativita=random.randint(1,10)
        nGusto=random.randint(1,10)
        nPresentazione=random.randint(1,10)
        punteggio = (nCreativita,nGusto,nPresentazione)
        for tipologia ,punteggi, categoria in dati:
            tipologiaPiatto = "Piatto unico"
            categoriaChef = categoria
        dizionario[nomeChef] = [tipologiaPiatto,punteggio,categoriaChef]

#4
def stampaChef(dizionario):
   trovato = False
   sceltaChef = str(input("Inserisci il nome di uno chef del quale mostrare i dati: "))
   for nomeChef, dati in dizionario.items():
      if nomeChef == sceltaChef:
         trovato = True
         print(f"Nome e cognome: {nomeChef};")
         for tipologia ,punteggio, categoria in dati:
            print(f"Categoria di Chef: {categoria};")
            print(f"Punteggi {tipologia}: ")
            nCreativita = punteggio[0]
            nGusto = punteggio[1]
            nPresentazione = punteggio[2]
            print(f"Creatività: {nCreativita};")
            print(f"Gusto: {nGusto};")
            print(f"Presentazione: {nPresentazione};")
   if trovato == False:
      print("Chef non valido.")            

#5
def stampaPiatto(dizionario):
   trovato = False
   sceltaPiatto = str(input("Inserisci la tipologia di piatto da mostrare: "))
   for nomeChef, dati in dizionario.items():
      for tipologia ,punteggio, categoria in dati:
         if sceltaPiatto == tipologia: 
            trovato = True
            print(f"Nome e cognome: {nomeChef}")
            print(f"Categoria di Chef: {categoria};")
            print(f"Punteggi {tipologia}: ")
            nCreativita = punteggio[0]
            nGusto = punteggio[1]
            nPresentazione = punteggio[2]
            print(f"Creatività: {nCreativita};")
            print(f"Gusto: {nGusto};")
            print(f"Presentazione: {nPresentazione};")
   if trovato == False:
      print("Tipologia non valida.")

#6A           
def punteggioMassimo(dizionario):
   maxTipologia = 0
   maxCategoria = 0
   maxChefTipologia = []
   maxChefCategoria = []
   trovato1 = False
   trovato2 = False
   sceltaPiatto = str(input("Inserisci la categoria di piatto da analizzare: "))
   sceltaCategoria = str(input("Inserisci la categoria di chef da analizzare: "))
   for nomeChef, dati in dizionario.items():
      for tipologia, punteggi, categoria in dati:
         if tipologia == sceltaPiatto:
            trovato1 = True
            sommaTipologia = punteggi[0] + punteggi[1] + punteggi[2]
            if sommaTipologia>maxTipologia:
               maxTipologia = sommaTipologia
         if categoria == sceltaCategoria:
            trovato2 = True
            sommaCategoria = punteggi[0] + punteggi[1] + punteggi[2]
            if sommaCategoria>maxCategoria:
               maxCategoria = sommaCategoria
   
   for nomeChef, dati in dizionario.items():
      for tipologia, punteggi, categoria in dati:
         if tipologia == sceltaPiatto:
            sommaTipologia = punteggi[0] + punteggi[1] + punteggi[2]
            if sommaTipologia==maxTipologia:
               maxChefTipologia.append(nomeChef)
         if categoria == sceltaCategoria:
            sommaCategoria = punteggi[0] + punteggi[1] + punteggi[2]
            if sommaCategoria>maxCategoria:
               maxChefCategoria.append(nomeChef)
   if trovato1 == False or trovato2 == False:
      print("Tipologia o categoria inseriti non valide.")
   else:
      print(f"Punteggio totale massimo per la tipologia {sceltaPiatto} equivale a  {maxTipologia}, ottenuto dai seguenti chef: {maxChefTipologia}.")
      print(f"Punteggio totale massimo per la categoria {sceltaCategoria} equivale a {maxCategoria}, ottenuto dai seguenti chef: {maxChefCategoria}.")

#6B
def mediaPunteggioTotale(dizionario):
   mediaTipologia = 0
   mediaCategoria = 0
   nTipologia = 0
   nCategoria = 0
   sommaTipologia = 0
   sommaCategoria = 0
   trovato1 = False
   trovato2 = False
   sceltaPiatto = str(input("Inserisci la categoria di piatto da analizzare: "))
   sceltaCategoria = str(input("Inserisci la categoria di chef da analizzare: "))

   for nomeChef, dati in dizionario.items():
      for tipologia, punteggi, categoria in dati:
         if tipologia == sceltaPiatto:
            trovato1 = True
            sommaTipologia += punteggi[0] + punteggi[1] + punteggi[2]
            nTipologia += 1
         if categoria == sceltaCategoria:
            trovato2 = True
            sommaCategoria = punteggi[0] + punteggi[1] + punteggi[2]
            nCategoria += 1

   mediaTipologia = sommaTipologia/nTipologia
   mediaCategoria = sommaCategoria/nCategoria

   if trovato1 == False or trovato2 == False:
      print("Tipologia o categoria inseriti non valide.")
   else:
      print(f"Media punteggio totale per la tipologia {sceltaPiatto} equivale a  {mediaTipologia}.")
      print(f"Media punteggio totale per la categoria {sceltaCategoria} equivale a {mediaCategoria}.")

aggiuntaCategoria(dizionario)
stampaChef(dizionario)
stampaPiatto(dizionario)
punteggioMassimo(dizionario)
mediaPunteggioTotale(dizionario)

# def inserisci_nuovo_chef(dizionario):

 # def inserisci_dati_nuovo_chef():
   #nome = str(input("Inserisci il nome dello chef: "))
   #cognome = str(input("Inserisci il cognome dello chef: "))
   #for i in range(0,3):
      